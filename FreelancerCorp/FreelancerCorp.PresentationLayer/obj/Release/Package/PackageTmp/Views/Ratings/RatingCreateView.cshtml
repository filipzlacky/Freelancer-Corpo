@model FreelancerCorp.PresentationLayer.Models.Ratings.RatingViewModel

@{
    ViewBag.Title = "Create rating";
}

<h2>Rate user</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Creator", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <h4>@User.Identity.Name (You)</h4>
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Rated user", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <h4>@Model.RatedUserName</h4>
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Comment", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rating.Comment, new { htmlAttributes = new { @class = "form-control", required="required" } })
            @Html.ValidationMessageFor(model => model.Rating.Comment, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Score (the worst = 0, the best = 100)", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rating.Score, new { htmlAttributes = new { @class = "form-control", min = 0, max = 100, required="required"} })
            @Html.ValidationMessageFor(model => model.Rating.Score, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Cancel", "Details", Model.RatedUserRole + "s", new { id = Model.RatedUserId }, null)
</div>
